bin_PROGRAMS = bpel2owfn


#######################
# the list of sources #
#######################

# These files are actually compiled and linked for BPEL2oWFN (except the
# frontend files: for them C++ code is generated).
bpel2owfn_SOURCES = $(KCSOURCES) \
	frontend-parser.yy \
	frontend-parser-chor.yy \
	frontend-parser-wsdl.yy \
	frontend-lexer.ll \
	frontend-parser.h \
	main.cc \
	globals.cc globals.h \
	debug.cc debug.h \
	colorconsole.h \
	helpers.cc helpers.h \
	cfg.cc cfg.h \
	options.cc options.h \
	ast-tools.cc ast-tools.h \
	ast-details.cc ast-details.h \
	extension-wsdl.cc extension-wsdl.h \
	extension-chor.cc extension-chor.h \
	pnapi.h petrinet.h petrinet.cc \
	petrinet-output.cc petrinet-reduction.cc \
	cmdline.c cmdline.h

# These sources have to be present before the rest is compiled.
BUILT_SOURCES = $(KCDUMMY) \
	frontend-parser.cc \
	frontend-parser-chor.cc \
	frontend-parser-wsdl.cc \
	cmdline.c

# These files have to be distributed to compile without compiler generators.
EXTRA_DIST = $(KCDUMMY) $(KCFILES_TEMP) $(KCFILES_NECESSARY) cmdline.ggo


##########################################
# everything about the Kimwitu++ sources #
##########################################

# define flags for Kimwitu++:
#  - create a file "ast-system-yystype.h" for Flex and Bison
#  - prefix all generated files with "ast-system-"
#  - suffix all generated files with "cc"
#  - do not create functions for phylum I/O
KCFLAGS = --yystype --file-prefix=ast-system- --suffix=cc --no-csgio

# a dummy file to use Makefile's timestamps
KCDUMMY = .timestamp

# Files that create C++ files that are not linked to the executable. These
# sources can be deleted before compilation (usually the unparsers).
KCFILES_TEMP = ast-to-petrinet.k \
	ast-to-xml.k ast-to-cfg.k \
	ast-postprocess.k ast-rewrite.k \
	ast-to-visualization.k

# files that create C++ that have to be linked to executable
KCFILES_NECESSARY = petrinet-patterns-basic.k \
	petrinet-patterns-structured.k \
	petrinet-patterns-scopes.k \
	petrinet-patterns-handlers.k \
	petrinet-patterns-links.k \
	petrinet-patterns-shortcuts.k \
	ast-grammar.k \
	ast-config.k

# source files generated by Kimwitu++ to be distributed
KCSOURCES = ast-system-k.cc ast-system-k.h \
	ast-system-rk.cc ast-system-rk.h \
	ast-system-unpk.cc ast-system-unpk.h \
	$(KCFILES_NECESSARY:.k=.cc) \
	$(KCFILES_NECESSARY:.k=.h) \
	ast-system-yystype.h

# Dependencies of the Kimwitu++ files: the timestamp is renewed when a
# Kimwitu++ file is touched. This triggers the creation of all source files.
# The sed-script fixes problems occurring when BPEL2oWFN is compiled on
# x86_64 machines.
$(KCDUMMY): $(KCFILES_NECESSARY) $(KCFILES_TEMP)
	$(AM_V_at)touch $@
	$(AM_V_GEN)$(KC) $(KCFLAGS) $^
	$(AM_V_at)-rm $(KCFILES_TEMP:.k=.cc) $(KCFILES_TEMP:.k=.h)
	$(AM_V_at)$(SED) -i 's/reinterpret_cast<int>/reinterpret_cast<long>/g' ast-system-k.cc


################################################################
# use GNU gengetopt to create command line parser
################################################################
cmdline.c: cmdline.ggo
	$(AM_V_GEN)$(GENGETOPT) --input=cmdline.ggo --long-help --include-getopt --show-required --unamed-opts


############################
# organization of cleaning #
############################

# remove files generated by gcov
CLEANFILES = *.gcda *.gcno

# always clean the files generated by Kimwitu++, Bison, and gengetopt
MAINTAINERCLEANFILES = $(KCSOURCES) $(KCDUMMY) \
	frontend-parser.h \
	cmdline.h
