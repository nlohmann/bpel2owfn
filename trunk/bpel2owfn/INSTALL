BEGIN OF INSTALL file for BPEL2oWFN Version 1.0

Setup and Installation
**********************

Setup
=====

Entering(1)

     gunzip bpel2owfn-1.0.tar.gz
     tar xf bpel2owfn-1.0.tar
     cd bpel2owfn-1.0
     ./configure

should lead to an output like:

     checking for a BSD-compatible install... /usr/bin/install -c
     checking whether build environment is sane... yes
     checking for gawk... gawk
     checking whether make sets $(MAKE)... yes
     checking for g++... g++
     checking for C++ compiler default output file name... a.exe
     checking whether the C++ compiler works... yes
     checking whether we are cross compiling... no
     checking for suffix of executables... .exe
     checking for suffix of object files... o
     checking whether we are using the GNU C++ compiler... yes
     checking whether g++ accepts -g... yes
     checking for style of include used by make... GNU
     checking dependency style of g++... gcc3
     checking for a BSD-compatible install... /usr/bin/install -c
     checking for flex... flex
     checking for yywrap in -lfl... yes
     checking lex output file root... lex.yy
     checking whether yytext is a pointer... no
     checking for bison... bison
     checking for kc++... kc++
     configure: creating ./config.status
     config.status: creating Makefile
     config.status: creating doc/Makefile
     config.status: creating src/Makefile
     config.status: creating tests/Makefile
     config.status: executing depfiles commands

After that, simply execute `make'. When everything goes well, you can
self-check BPEL2oWFN by invoking `make check'. After a lot of output it
should announce

     ==================
     All 3 tests passed
     ==================

or, if anything went wrong, prints error message and requests to report
the encountered bug to <nlohmann@informatik.hu-berlin.de>.

Installation
============

After successful compilation and self tests an executable file
`bpel2owfn' (or `bpel2owfn.exe' on systems running Microsoft Windows)
is created in the directory `bpel2owfn-1.0/src' of the distribution.
This file has no dependencies to other files of the distribution and
can be copied to any directory.

Alternatively you can install BPEL2oWFN properly by executing `make
install'.(2)

Problems during Setup or Installation
=====================================

Any warning during an in other respects successful compilation can be
ignored--these warnings mostly occur in generated files from Flex,
Bison or Kimwitu++ and are outside of our scope.

BPEL2oWFN was tested on several operating systems such as Microsoft
Windows (running cygwin), Linux and Sun OS. Anyway, if the compilation
fails please make sure you use the most recent versions of the GNU
Compiler Collection, Flex, Bison and Kimwitu++. If this does not help
please send us an electronic mail to <nlohmann@informatik.hu-berlin.de>.
Include the version number of your distribution (version 1.0 of 26
January 2006). Also include in your message the output that the make
process produced. We will try to answer your mail within a week.

If you are not interested in compiling BPEL2oWFN yourself you can
alternatively download executable binaries for several operating
systems on the website of BPEL2oWFN
(`http://www.informatik.hu-berlin.de/top/tools4bpel/bpel2owfn').

Makefile Targets
================

`all'
     Compile BPEL2oWFN and create an executable binary `bpel2owfn' (or
     `bpel2owfn.exe' on systems running Microsoft Windows) in the
     directory `bpel2owfn-1.0/src'.

`dvi'
`html'
`pdf'
`ps'
`info'
     Generate documentation files in the given format which can be DVI,
     HTML, PDF, PostScript or GNU Info. The documentation is generated
     in the directory `bpel2owfn-1.0/doc' and is named
     `bpel2owfn.FORMAT' (User's Manual) and `install.FORMAT'
     (Installation Manual), resp.

`clean'
     Clean all temporary files created during the compilation.
     Executables as well as generated documentation are preserved.

`distclean'
     Clean everything that does not belong to the distribution, i.e.
     any file created during compilation. Executables as well as
     created documentation files are also removed.

`check'
     Perform a number of self-tests: the directory `tests' contains
     several BPEL processes which are read and compiled.

`dist'
     Create a zipped distribution tar file containing all files of the
     distribution (calls `distclean' before).

For the compilation of the sources in the directory `bpel2owfn-1.0/src'
it is possible to set an optimization level of `g++' by setting a
variable `OPTIMIZE'. For example, `make OPTIMIZE=-O3' invokes a
compilation with all possible optimization which yields to a smaller
and faster executable and longer compilation time.

---------- Footnotes ----------

(1) Cygwin users should open an `tcsh'-shell before.

(2) Usually, `make install' has to be executed by the
root/administrator.

Needed Programs
***************

Required Programs
=================

To compile BPEL2oWFN you need the following programs. These programs
are (as BPEL2oWFN itself) free software distributed under the GNU
General Public License.

Flex, A fast scanner generator
     Flex is needed to generate the lexer of BPEL2oWFN. Flex was written
     by Vern Paxon. Copyright (C) 1990 The Regents of the University of
     California. All rights reserved. Flex is available under
     `http://www.gnu.org/software/flex/flex.html'.

Bison, The YACC-compatible Parser Generator
     Bison is needed to generate the parser of BPEL2oWFN. Bison was
     written by Robert Corbett und Richard Stallman. Copyright (C) 1992,
     1998, 1999, 2003, 2004, 2005 Free Software Foundation, Inc. Bison
     is available under `http://www.gnu.org/software/bison/bison.html'.

Kimwitu++, The Term Processor
     Kimwitu++ is needed to generate all files managing the AST
     (abstract syntax tree). Kimwitu++ was written by Toby Neumann and
     Michael Piefel.  Copyright (C) 1988-1997  Axel Belinfante,
     University of Twente.  Copyright (C) 1997-2000  Michael Piefel,
     Humboldt-University Berlin.  Kimwitu++ is available under
     `http://site.informatik.hu-berlin.de/kimwitu++'.

Optional Programs
=================

BPEL2oWFN is a compiler and thus creating output files which can be
read by several other programs. These programs are not needed to compile
BPEL2oWFN yet without these programs BPEL2oWFN makes not much sense.

LoLA, a Low Level Petri net Analyzer
     LoLA is an explicit model checker implementing a broad variety of
     reduction techniques such as partial order reduction, symmetries
     or the sweep line method. LoLA was written by Karsten Schmidt and
     is available under
     `http://www.informatik.hu-berlin.de/~kschmidt/lola.html'.

Graphviz, the Graph Visualization Software
     Graphviz is a graph visualization software with several graph
     layout programs including dot. Graphviz is maintained by AT&T Labs
     and is available under `http://www.graphviz.org'.

----------------------------------------------------------------------

Copyright (C) 2005, 2006 Niels Lohmann, Christian Gierds and Dennis
Reinert.

This file is part of BPEL2oWFN, a tool translating business processes
described in BPEL to open workflow nets (oWFN).

BPEL2oWFN is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.

BPEL2oWFN is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along
with BPEL2oWFN; if not, write to the Free Software Foundation, Inc., 51
Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

END OF INSTALL file for BPEL2oWFN Version 1.0
