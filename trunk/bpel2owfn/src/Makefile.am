#############################################################################
# GNU BPEL2oWFN -- Translating BPEL Processes into Petri Net Models
#
# Copyright (C) 2006, 2007  Niels Lohmann,
#                           Christian Gierds, and
#                           Martin Znamirowski
# Copyright (C) 2005        Niels Lohmann and
#			    Christian Gierds
#
# GNU BPEL2oWFN is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3 of the License, or (at your option) any
# later version.
#
# GNU BPEL2oWFN is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# GNU BPEL2oWFN; if not, see http://www.gnu.org/licenses or write to the Free
# Software Foundation,Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301  USA.
#############################################################################

# File last changed $Date: 2007/07/25 09:28:06 $ by $Author: znamirow $.
# Version $Revision: 1.87 $

bin_PROGRAMS = bpel2owfn



#########
# flags #
#########

# define flags for Kimwitu++:
#  - create a file "ast-system-yystype.h" for Flex and Bison
#  - prefix all generated files with "ast-system-"
#  - suffix all generated files with "cc"
#  - do not create functions for phylum I/O
KCFLAGS = --yystype --file-prefix=ast-system- --suffix=cc --no-csgio

# Set compiler flags to warn a lot and to check compliance to ANSI C++
# (un-comment or change to "-O2" before distribution).
bpel2owfn_CXXFLAGS = -ansi -Wall -Wno-unused -pedantic
bpel2owfn_CFLAGS = -ansi -Wall -Wno-unused -pedantic



##########################################
# everything about the Kimwitu++ sources #
##########################################

# a dummy file to use Makefile's timestamps
KCDUMMY = .timestamp

# Files that create C++ files that are not linked to the executable. These
# sources can be deleted before compilation (usually the unparsers).
KCFILES_TEMP = ast-to-petrinet.k \
	       ast-to-xml.k ast-to-cfg.k \
	       ast-postprocess.k ast-rewrite.k \
	       ast-to-visualization.k

# files that create C++ that have to be linked to executable
KCFILES_NECESSARY = petrinet-patterns-basic.k \
		    petrinet-patterns-structured.k \
		    petrinet-patterns-scopes.k \
		    petrinet-patterns-handlers.k \
		    petrinet-patterns-links.k \
		    petrinet-patterns-shortcuts.k \
		    ast-grammar.k \
		    ast-config.k

# source files generated by Kimwitu++ to be distributed
KCSOURCES = ast-system-k.cc ast-system-k.h \
	    ast-system-rk.cc ast-system-rk.h \
	    ast-system-unpk.cc ast-system-unpk.h \
	    $(KCFILES_NECESSARY:.k=.cc) \
	    $(KCFILES_NECESSARY:.k=.h) \
	    ast-system-yystype.h

# Dependencies of the Kimwitu++ files: the timestamp is renewed when a
# Kimwitu++ file is touched. This triggers the creation of all source files.
$(KCDUMMY): $(KCFILES_NECESSARY) $(KCFILES_TEMP)
	touch $@
	$(KC) $(KCFLAGS) $^
	-rm $(KCFILES_TEMP:.k=.cc) $(KCFILES_TEMP:.k=.h)



#######################
# the list of sources #
#######################

# These files are actually compiled and linked for BPEL2oWFN (except the
# frontend files: for them C++ code is generated).
bpel2owfn_SOURCES = $(KCSOURCES) \
		    frontend-parser.yy \
		    frontend-parser-owfn.yy \
		    frontend-parser-pnml.yy \
		    frontend-lexer.ll \
		    frontend-lexer-owfn.ll \
		    frontend-parser-chor.yy \
		    frontend-parser-wsdl.yy \
		    bpel2owfn.cc \
		    globals.cc globals.h \
		    debug.cc debug.h \
		    colorconsole.h \
		    helpers.cc helpers.h \
		    cfg.cc cfg.h \
		    options.cc options.h \
		    getopt.h getopt.c getopt1.c \
		    ast-tools.cc ast-tools.h \
		    ast-details.cc ast-details.h \
		    extension-wsdl.cc extension-wsdl.h \
		    extension-chor.cc extension-chor.h \
		    extension-data.cc extension-data.h \
		    pnapi.h petrinet.h petrinet.cc \
		    petrinet-output.cc petrinet-reduction.cc 

# These sources have to be present before the rest is compiled.
BUILT_SOURCES = $(KCDUMMY) \
		frontend-parser.cc \
		frontend-parser-chor.cc \
		frontend-parser-wsdl.cc \
		frontend-parser-owfn.cc \
		frontend-parser-pnml.cc

# These files have to be distributed to compile without compiler generators.
EXTRA_DIST = $(KCDUMMY) \
	     $(KCFILES_TEMP) \
	     $(KCFILES_NECESSARY) \
	     frontend-parser.h frontend-parser-owfn.h
	     



############################
# organization of cleaning #
############################

# when cleaning, also delete Vi's temp files
CLEANFILES = *~ bpel2owfn.exe.stackdump

# always clean the files generated by Kimwitu++, Flex and Bison
MAINTAINERCLEANFILES = $(KCSOURCES) \
		       $(KCDUMMY) \
		       frontend-parser.h frontend-parser.cc frontend-lexer.cc \
		       Doxyfile

veryclean: clean
	-rm $(KCSOURCES) $(KCDUMMY) frontend-parser.cc frontend-lexer.cc
