/*****************************************************************************\
 * Copyright 2005, 2006 Niels Lohmann, Christian Gierds, Dennis Reinert      *
 *                                                                           *
 * This file is part of BPEL2oWFN.                                           *
 *                                                                           *
 * BPEL2oWFN is free software; you can redistribute it and/or modify it      *
 * under the terms of the GNU General Public License as published by the     *
 * Free Software Foundation; either version 2 of the License, or (at your    *
 * option) any later version.                                                *
 *                                                                           *
 * BPEL2oWFN is distributed in the hope that it will be useful, but WITHOUT  *
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     *
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
 * more details.                                                             *
 *                                                                           *
 * You should have received a copy of the GNU General Public License along   *
 * with BPEL2oWFN; if not, write to the Free Software Foundation, Inc., 51   *
 * Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.                      *
\****************************************************************************/ 

#ifndef BPEL_UNPARSE_TOOLS_H
#define BPEL_UNPARSE_TOOLS_H

#include <string>
#include "petrinet.h"
#include "debug.h"
#include "symbol-table.h"
#include "bpel-kc-unpk.h"       // generated by kimwitu++

using namespace std;

// introduced in bpel-syntax.y
extern SymbolTable symTab;

// introduced in main.c 
extern PetriNet *TheNet;

// introduced in bpel-unparse.k
extern string currentScope;



Transition *throwFault(Place *p1, Place *p2,
    string guard, string p1name, string inscription, string prefix,
    kc::integer negativeControlFlow, bool preventFurtherFaults = true);

Transition *stop(Place *p, string p_name, string inscription, string prefix);


void in();
void inup();
void indown();


string inString();
void header(kc::integer id, bool indent = false);
void footer(kc::integer id, bool indent = false);


#endif
