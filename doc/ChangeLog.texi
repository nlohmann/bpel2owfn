@heading Version 2.04 (not yet released)

@itemize
@item fixed bug #12110 (@url{https://gna.org/bugs/?12110}): compilation errors using GCC 4.3.1

@item adapted the cleaning scripts

@item renamed Makefile target @option{hu-prepare} to @option{cvs-clean}

@item added @option{--bug} parameter

@item neither Automake nor Autoconf set any gcc parameters

@item removed @file{extension-data.*}, because nobody will be working on this

@item added Makefiles for a Manpage created by help2man

@item fixed a small bug that yielded parse problems when strings appeared in @code{<documentation>} elements

@item renamed generated configuration header to @file{config.h} to achieve compatibility with getopt and the sources generated by GNU gengetopt

@item replaced previously patched files @file{getopt.c}, @file{getopt.h}, and @file{getopt1.c} by standard files from GNUlib

@item changed versioning scheme from @samp{x.yz} to @samp{x.yz} -- next version ist 2.04

@item completed task #6117 (@url{https://gna.org/task/?6117}): now using gengetopt to organize command line options

@item completed task #6078 (@url{https://gna.org/task/?6078}): implement Woflan file format

@item fixed bug #12126 (@url{https://gna.org/bugs/?12126}): @command{make distcheck} does not finish successfully

@item added Makefile targets @option{patch} and @option{patched} to create and apply patches against the Gna! subversion repository (@url{https://gna.org/svn/?group=service-tech})

@item added a parameter @option{decomp} and implemented rudimentary decomposition support
@end itemize




@heading Version 2.0.3 (29 June 2007)

@itemize
 @item miscellaneous:
 @itemize
  @item adpoted the GNU GPL Version 3
  @item minor changes and bug fixes
 @end itemize
@end itemize





@heading Version 2.0.2 (15 June 2007)

@itemize
 @item new features:
 @itemize
  @item @acronym{BPEL4Chor} choreographies can be translated (further information to come)
  @item @acronym{WSDL} files can be parsed to support the translation of a BPEL process
  @item abstract @acronym{BPEL} processes (both @acronym{BPEL4WS} 1.1 and @acronym{WS-BPEL} 2.0) are now parsed
 @end itemize
 @item miscellaneous:
 @itemize
  @item when parsing multiple @acronym{BPEL} processes, wildcard like @file{*.bpel} can be used
 @end itemize
@end itemize





@heading Version 2.0.1 (11 May 2007)

@itemize
 @item fixed bugs:
 @itemize
  @item @code{<if>}/@code{<switch>} pattern did not work with parameter @samp{communicationonly}
  @item @code{<flow>} activities in repeated constructs (@code{<while>}, @code{<repeatUntil>}, ...) could result in unbounded nets
  @item parameter @samp{xor} could crash
 @end itemize
 @item miscellaneous:
 @itemize
  @item new parameter @samp{nointerface} allows to create dot output of the generated Petri net model without drawing the interface
  @item transitions of the Petri net model are labeled and colored according to their role (only for dot mode)
  @item Petri net reduction rules can be chosen using the @samp{reduce} option
  @item improved performance of composition of nets in the @samp{consistency} mode
 @end itemize
@end itemize





@heading Version 2.0.0 (20 April 2007)

@itemize
 @item input:
 @itemize
  @item executable @acronym{BPEL4WS} 1.1 processes
  @item executable @acronym{WS-BPEL} 2.0 processes
  @item abstract @acronym{BPEL4WS} 1.1 processes (experimental)
  @item abstract @acronym{WS-BPEL} 2.0 processes (experimental)
 @end itemize

 @item output:
 @itemize
  @item Petri net file formats: @acronym{APNN}, @acronym{INA} (untimed, low-level),
  @acronym{LoLA} (low-level), Fiona oWFN, @acronym{PEP} notation (low-level),
  @acronym{PNML} (with extension to model interfaces), SPIN (Promela)
  @item other file formats: Graphviz dot, @acronym{XML}
 @end itemize

 @item implemented patterns:
 @itemize
  @item overworked feature-complete Petri net semantics for @acronym{BPEL4WS} 1.1
and @acronym{WS-BPEL} 2.0
  @item overworked simplified Petri net semantics to model the communicational
behavior only
  @item several versions of each pattern controlled by command-line parameters
 @end itemize

 @item static analysis
 @itemize
  @item 44 of 94 static analysis goals of the @acronym{WS-BPEL} specification are checked
  @item read access to uninitialized variables can be detected using the @acronym{CFG, control flow graph}
  @item conflicting receiving activities can be detected using the @acronym{CFG}
 @end itemize


 @item miscellaneous:
 @itemize
  @item completely overworked architecture
  @item all Petri net-related functions are packaged to a Petri net
  @acronym{API, application programming interface} to be published independently
of BPEL2oWFN soon
  @item statistics of the input process are displayed after implicit transformation
rules are applied
  @item messages are classified (error, warning, etc.) and numbered to allow for
a detailed description in the manual
 @end itemize
@end itemize





@heading Version 1.2 (6 April 2006)

@itemize
 @item overworked patterns:
 @itemize
  @item more parameterized versions of the Stahl-semantics (see version 1.1):
  @itemize
   @item acyclic models (also acyclic event handlers)
   @item models without variables
   @item models without standard faults occuring while handling a fault
  @end itemize
  For more information please refer to the User's Manual.
 @end itemize

 @item static analysis:
 @itemize
  @item A control flow graph can be built and used to detect the use of uninitialized
variables.
 @end itemize

 @item miscellaneous:
 @itemize
  @item The command-line parameter @samp{-p finishloop} is renamed to @samp{-p finalloop}.
  @item Structural reduction rules remove all structural dead nodes of the generated Petri
net model.
 @end itemize

 @item fixed bugs:
  @itemize
   @item Pattern of asynchronous @code{<invoke>} activity does no longer receive messages.
   @item Structural reduction rules no longer change the semantics of the @code{<switch>}
activity.
   @item Structural reduction rules no longer remove the loop transition for deadlock search.
  @end itemize
 @end itemize





@heading Version 1.1 (24 February 2006)
@itemize
@item new output formats:
@itemize
@item @acronym{APNN, Abstract Petri Net Notation} Petri net
@item @acronym{PNML, Petri Net Markup Language} Petri net
@item low-level @acronym{PEP, Programming Environment based on Petri Nets} Petri
net
@end itemize

@item overworked patterns:
@itemize
@item the Stahl-semantics (see version 1.0) has been enhanced and can be
parametrized:
@itemize
@item original semantics
@item models without @acronym{BPEL}'s standard faults
@item acyclic models
@end itemize
For more information please refer to the User's Manual.
@end itemize

@item static analysis:
@itemize
@item To reduce the size of the Petri net model static analysis is used to only
generate nodes for the @acronym{DPE, dead path elimination} when necessary.
@end itemize

@item miscellaneous:
@itemize
@item The compiler generator tools Flex, Bison and Kimwitu++ are not any more
necessary to compile BPEL2oWFN: the generated sources are now part of
the distrubution.
@item The @acronym{oWFN} format was overworked and allows final markings.
@item GNU getopt allows more flexible command-line parameter
processing allowing to create several output file formats in a single run.
@item Debug output can be written into a log file.
@item The classes organizing the Petri nets are overworked for performance and
extensibility.
@end itemize

@item fixed bugs:
@itemize
@item The generation of all possible types of the @code{<invoke>} activity
(synchronous, asynchronous, with and without implicit scope) is overworked.
@end itemize
@end itemize





@heading Version 1.0 (16 January 2006)

@itemize
 @item input:
 @itemize
  @item @acronym{BPEL} process compliant to the specificiation @acronym{BPEL4WS} version 1.1, May 2003.
 @end itemize

 @item output:
 @itemize
  @item @acronym{LoLA} Petri net
  @item open workflow net
  @item Dot representation
 @end itemize

 @item implemented patterns:
 @itemize
  @item Christian Stahl. @i{A Petri Net Semantics fo @acronym{BPEL}}. Informatik-Berichte 188, Humboldt-Universit@"at zu Berlin,
July 2005.
  @end itemize
 @end itemize
